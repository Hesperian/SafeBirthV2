"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const rule_1 = require("../rule");
const dom_1 = require("../dom");
class CloseOrder extends rule_1.Rule {
    setup() {
        this.on('tag:close', (event) => {
            const current = event.target;
            const active = event.previous;
            if (!current) {
                this.report(event.previous, `Missing close-tag, expected '</${active.tagName}>' but document ended before it was found.`);
                return;
            }
            if (current.voidElement) {
                return;
            }
            if (active.closed === dom_1.NodeClosed.ImplicitClosed) {
                return;
            }
            if (!active || active.isRootElement()) {
                this.report(event.previous, "Unexpected close-tag, expected opening tag.");
                return;
            }
            if (current.tagName !== active.tagName) {
                this.report(event.target, `Mismatched close-tag, expected '</${active.tagName}>' but found '</${current.tagName}>'.`, current.location);
            }
        });
    }
}
module.exports = CloseOrder;
