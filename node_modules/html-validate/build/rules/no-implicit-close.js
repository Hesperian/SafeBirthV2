"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const rule_1 = require("../rule");
const dom_1 = require("../dom");
class NoImplicitClose extends rule_1.Rule {
    setup() {
        this.on('tag:close', (event) => {
            const closed = event.previous;
            const by = event.target;
            if (closed.closed !== dom_1.NodeClosed.ImplicitClosed) {
                return;
            }
            const closedByParent = closed.parent.tagName === by.tagName;
            const sameTag = closed.tagName === by.tagName;
            if (closedByParent) {
                this.report(closed, `Element <${closed.tagName}> is implicitly closed by parent </${by.tagName}>`, closed.location);
            }
            else if (sameTag) {
                this.report(closed, `Element <${closed.tagName}> is implicitly closed by sibling`, closed.location);
            }
            else {
                this.report(closed, `Element <${closed.tagName}> is implicitly closed by adjacent <${by.tagName}>`, closed.location);
            }
        });
    }
}
module.exports = NoImplicitClose;
